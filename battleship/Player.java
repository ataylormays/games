import java.util.Arrays;public class Player{	String name;	PatrolBoat p;	Battleship b;	Submarine s;	Destroyer d;	AircraftCarrier a;	public Player(String nm){		name = nm;		p = new PatrolBoat();		b = new Battleship();		s = new Submarine();		d = new Destroyer();		a = new AircraftCarrier();	}	public boolean alive(){		return !(p.sunk && b.sunk && s.sunk && d.sunk && a.sunk);	}	public void printPlayer(){		System.out.println("Player name: " + name);		p.printShip();		b.printShip();		s.printShip();		d.printShip();		a.printShip();	}	public void setShip(Ship s, Board b, int x, int y){ //sets H to right, sets V down		if((s.orientation == 'V' && (y-s.squares <0)) ||				(s.orientation == 'H' && (x+s.squares >9))){				System.out.println("Attempting to place ship off board.");					} 		else {			int[] xs = new int[s.squares];			int[] ys = new int[s.squares];			int ct = 0;			if (s.orientation == 'H'){				for(int i = x; i < x+s.squares; i++){					if(b.getSquare(i, y).free){						continue;					} 					else {						System.out.println("Space is already occupied.");						break;					}				}				for(int i = x; i < x+s.squares; i++){					b.getSquare(i, y).free = false;					xs[ct++] = i;				}				Arrays.fill(ys, y);			}			else if (s.orientation == 'V'){				for(int i = y; i > y-s.squares; i--){					if(b.getSquare(x, i).free){						continue;					} else {						System.out.println("Space is already occupied.");						break;					}				}				for(int i = y; i > y-s.squares; i--){					b.getSquare(x, i).free = false;					ys[ct++] = i;				}				Arrays.fill(xs, x);			}			s.setXs(xs);			s.setYs(ys);		}	}}