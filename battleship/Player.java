import java.util.Arrays;import java.util.Scanner;import java.util.Random;public class Player{	String name;	PatrolBoat p;	Battleship b;	Submarine s;	Destroyer d;	AircraftCarrier a;	Board board;	public Player(String nm){		name = nm;		p = new PatrolBoat();		b = new Battleship();		s = new Submarine();		d = new Destroyer();		a = new AircraftCarrier();		board = new Board();	}	public boolean alive(){		return !(p.sunk && b.sunk && s.sunk && d.sunk && a.sunk);	}	public void printPlayer(){		System.out.println("Player name: " + name);		p.printShip();		b.printShip();		s.printShip();		d.printShip();		a.printShip();	}	public boolean setShip(Ship s, int x, int y){ //sets H to right, sets V down. Recall origin is in top left		if((s.orientation == 'V' && (y+s.squares >9)) ||				(s.orientation == 'H' && (x+s.squares >9))){				//System.out.println("Attempting to place ship off board at " + x + ", " + y);				//System.out.println("Orientation: " + s.orientation);				return false;					} 		else {			int[] xs = new int[s.squares];			int[] ys = new int[s.squares];			int ct = 0;			if (s.orientation == 'H'){				for(int i = x; i < x+s.squares; i++){					if(board.getSquare(i, y).free){						continue;					} 					else {						//System.out.println("Space is already occupied.");						return false;					}				}				for(int i = x; i < x+s.squares; i++){					board.getSquare(i, y).free = false;					board.getSquare(i, y).setBoat(s.name.charAt(0));					xs[ct++] = i;				}				Arrays.fill(ys, y);			}			else if (s.orientation == 'V'){				for(int i = y; i < y+s.squares; i++){					if(board.getSquare(x, i).free){						continue;					} else {						//System.out.println("Space is already occupied.");						return false;					}				}				for(int i = y; i < y+s.squares; i++){					board.getSquare(x, i).free = false;					board.getSquare(x, i).setBoat(s.name.charAt(0));					ys[ct++] = i;				}				Arrays.fill(xs, x);			}			s.setXs(xs);			s.setYs(ys);		}		return true;	}	public static int[] parseMove(String input){		int[] move = new int[2];		move[0] = Character.getNumericValue(input.charAt(0));		move[1] = Character.getNumericValue(input.charAt(2));		return move;		}	public void setShipManual(Ship s){		Scanner scanner = new Scanner(System.in);		System.out.print("How should your " + s.name + " be oriented? V/H: ");		s.setOrtn(scanner.nextLine().charAt(0));		System.out.print("Where would you like it placed? ");		int[] loc = parseMove(scanner.nextLine());		setShip(s, loc[0], loc[1]);	}	public void setFleetManual(){		setShipManual(a);		setShipManual(b);		setShipManual(d);		setShipManual(p);		setShipManual(s);	}	public int randInt(int min, int max) {	   Random rand = new Random();	    // nextInt is normally exclusive of the top value,	    // so add 1 to make it inclusive	    int randomNum = rand.nextInt((max - min) + 1) + min;	    return randomNum;	}	public static void randOrtn(Ship S){		if (Math.random() >= .5) {			S.setOrtn('H');		} else {			S.setOrtn('V');		}	}	public boolean setRandShipLoc(Ship S){		boolean tryAgain = true;		int tries = 0;		while(tryAgain && tries++ < 10){			randOrtn(S);			Random rand = new Random();			if (S.orientation == 'H'){				int ct = 0;				int x = rand.nextInt(9-S.squares);				int y = rand.nextInt(9);				while(ct++ < (10-S.squares)*10 && !(setShip(S, x, y))) {					x = randInt(9-S.squares, 9);					y = rand.nextInt(9);				}				if(ct < (10-S.squares)*10){					tryAgain = false;				}			}			else if (S.orientation == 'V'){				int ct = 0;				int x = rand.nextInt(9);				int y = randInt(9-S.squares, 9);				while(ct++ < (10-S.squares)*10 && !(setShip(S, x, y))) {					x = rand.nextInt(9);					y = randInt(9-S.squares, 9);				}				if(ct < (10-S.squares)*10){					tryAgain = false;				}			}			}		if (tries < 10){			return true;		}		return false;	}	public void setRandFleet(){		setRandShipLoc(p);		setRandShipLoc(a);		setRandShipLoc(d);		setRandShipLoc(s);		setRandShipLoc(b);	}	public void fire(Player p2, int x, int y){		if (x > 9 || x < 0 || y > 9 || y < 0){			System.out.println("Must fire at location on board.");		}		else if(p2.board.getSquare(x, y).status != 'X') {			System.out.println("Already fired at " + x + "-" + y);		}		else{			if(p2.board.getSquare(x, y).free){				p2.board.getSquare(x, y).miss();			} 			else{				p2.board.getSquare(x, y).hit();				char c = p2.board.getSquare(x, y).boat;								if(c == 'A'){					p2.a.hit();				}				else if (c == 'B'){					p2.b.hit();				}				else if (c == 'D'){					p2.d.hit();				}				else if (c == 'P'){					p2.p.hit();				}				else if (c == 'S'){					p2.s.hit();				} else {					System.out.println("What the hell kind of ship is there?? " + c);				}							}		}	}}